- hosts: all
  become: true
  gather_facts: yes
  tasks:

    - name: "Disable SWAP since kubernetes can't work with swap enabled (1/2)"
      shell: |
        swapoff -a

    - name: "Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)"
      replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'

    - name: "Add overlay module to /etc/modules file"
      ansible.builtin.lineinfile:
        path: /etc/modules-load.d/modules.conf
        line: overlay

    - name: "Add br_netfilter module to /etc/modules file"
      ansible.builtin.lineinfile:
        path: /etc/modules-load.d/modules.conf
        line: br_netfilter

    - name: "Load the overlay module"
      community.general.modprobe:
        name: overlay
        state: present

    - name: "Load the br_netfilter module"
      community.general.modprobe:
        name: br_netfilter
        state: present

    - name: "Enable ipv4.ip_forward in sysctl"
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        sysctl_set: yes
        state: present
        reload: yes

    - name: "Enable net.bridge.bridge-nf-call-iptables in sysctl"
      ansible.posix.sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: '1'
        sysctl_set: yes
        state: present
        reload: yes

    - name: "Enable net.bridge.bridge-nf-call-ip6tables in sysctl"
      ansible.posix.sysctl:
        name: net.bridge.bridge-nf-call-ip6tables
        value: '1'
        sysctl_set: yes
        state: present
        reload: yes

    - name: "Install apt-transport-https"
      apt:
        name: apt-transport-https
        state: present
        update_cache: yes

    - name: "Install curl"
      apt:
        name: curl
        state: present
        update_cache: yes

    - name: "Add apt signing key for Kubernetes"
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: "Add Kubernetes repository into sources list"
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: "Add apt signing key for Docker"
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: "Add Docker repository into sources list"
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable
        state: present

    - name: "Install containerd.io"
      apt:
        name: containerd.io
        state: present
        update_cache: yes

    - name: "Configure containerd to start using systemd as a cgroup (1/2)"
      shell: containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1

    - name: "Configure containerd to start using systemd as a cgroup (2/2)"
      shell: sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

    - name: "Restart containerd"
      shell: systemctl restart containerd

    - name: "Restart containerd"
      shell: systemctl enable containerd

    # - name: "Install podman"
    #   apt:
    #     name: podman
    #     state: present
    #     update_cache: yes

    # - name: "Install podman"
    #   apt:
    #     name: podman
    #     state: present
    #     update_cache: yes

    # - name: "Enable service podman on boot and ensure it is not masked"
    #   systemd:
    #     name: podman
    #     enabled: yes
    #     masked: no

    # - name: "Restart service podman and issue daemon-reload to pick up config changes"
    #   systemd:
    #     name: podman
    #     state: restarted
    #     daemon_reload: yes

    # - name: "Start podman service"
    #   ansible.builtin.service:
    #     name: podman
    #     state: started

    - name: "Install kubeadm"
      apt:
        name: kubeadm
        state: present
        update_cache: yes

    - name: "Install kubectl"
      apt:
        name: kubectl
        state: present
        update_cache: yes

    - name: "Install kubelet"
      apt:
        name: kubelet
        state: present
        update_cache: yes

    - name: "Install kubernetes-cni"
      apt:
        name: kubernetes-cni
        state: present
        update_cache: yes